{"ast":null,"code":"var _jsxFileName = \"/Users/jarvis/dev/beecash-events/app/javascript/packs/component/form/index.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport SimpleReactValidator from 'simple-react-validator';\nimport { connect } from 'react-redux';\nimport { crudActions } from '../../_actions';\nimport RenderFormField from './renderFormField';\n\nvar styles = function styles(theme) {\n  return {\n    form: {\n      width: '100%',\n      // Fix IE 11 issue.\n      marginTop: theme.spacing(1)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    }\n  };\n};\n\nvar MuiForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(MuiForm, _React$Component);\n\n  var _super = _createSuper(MuiForm);\n\n  function MuiForm() {\n    var _this;\n\n    _classCallCheck(this, MuiForm);\n\n    _this = _super.call(this);\n\n    _this.clearFieldError = function () {\n      _this.props.clearData('formError');\n    };\n\n    _this.getFieldError = function (field) {\n      var formError = _this.props.formError;\n      var error;\n\n      if (formError) {\n        formError.forEach(function (element) {\n          if (element.field === field) {\n            error = element.message;\n          }\n        });\n      }\n\n      return error;\n    };\n\n    _this.handleChange = function (value, index) {\n      _this.props.handleChange(value, index);\n\n      _this.clearFieldError();\n\n      _this.validator.showMessages();\n\n      _this.forceUpdate();\n    };\n\n    _this.fileUpload = function (file) {\n      _this.props.fileUpload(file);\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.validator.allValid()) {\n        _this.props.handleSubmit(event);\n      } else {\n        _this.validator.showMessages();\n\n        _this.forceUpdate();\n      }\n    };\n\n    _this.validator = new SimpleReactValidator({\n      autoForceUpdate: _assertThisInitialized(_this),\n      element: function element(message) {\n        return message;\n      }\n    });\n    return _this;\n  }\n\n  _createClass(MuiForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          formFields = _this$props.formFields,\n          classes = _this$props.classes,\n          submitText = _this$props.submitText,\n          submitFullWidth = _this$props.submitFullWidth,\n          fullWidth = _this$props.fullWidth;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        className: classes.form,\n        noValidate: true,\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, formFields.map(function (form, index) {\n        var helperText;\n\n        if (form.validation) {\n          helperText = _this2.validator.message(form.name, form.value, form.validation);\n        }\n\n        if (_this2.getFieldError(form.name)) {\n          helperText = _this2.getFieldError(form.name);\n        }\n\n        return /*#__PURE__*/React.createElement(RenderFormField, {\n          key: index,\n          fullWidth: fullWidth,\n          helperText: helperText,\n          index: index,\n          form: form,\n          handleChange: _this2.handleChange,\n          fileUpload: _this2.fileUpload,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }\n        });\n      }), /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        fullWidth: submitFullWidth,\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.submit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }\n      }, submitText)));\n    }\n  }]);\n\n  return MuiForm;\n}(React.Component);\n\nfunction mapState(state) {\n  var formError = state.formError;\n  return {\n    formError: formError\n  };\n}\n\nvar actionCreators = {\n  clearData: crudActions._clear\n};\nexport default connect(mapState, actionCreators)(withStyles(styles)(MuiForm));","map":{"version":3,"sources":["/Users/jarvis/dev/beecash-events/app/javascript/packs/component/form/index.jsx"],"names":["React","Button","withStyles","SimpleReactValidator","connect","crudActions","RenderFormField","styles","theme","form","width","marginTop","spacing","submit","margin","MuiForm","clearFieldError","props","clearData","getFieldError","field","formError","error","forEach","element","message","handleChange","value","index","validator","showMessages","forceUpdate","fileUpload","file","handleSubmit","event","preventDefault","allValid","autoForceUpdate","formFields","classes","submitText","submitFullWidth","fullWidth","map","helperText","validation","name","Component","mapState","state","actionCreators","_clear"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport SimpleReactValidator from 'simple-react-validator';\nimport { connect } from 'react-redux';\nimport { crudActions } from '../../_actions';\n\nimport RenderFormField from './renderFormField'\n\n\nconst styles = (theme) => ({\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\nclass MuiForm extends React.Component {\n    constructor() {\n        super()\n        this.validator = new SimpleReactValidator({\n            autoForceUpdate: this,\n            element: message => message\n        });\n    }\n\n    clearFieldError = () => {\n        this.props.clearData('formError')\n    }\n\n    getFieldError = (field) => {\n        const { formError } = this.props\n        let error\n        if (formError) {\n            formError.forEach(element => {\n                if (element.field === field) {\n                    error = element.message\n                }\n            });\n        }\n        return error\n    }\n\n    handleChange = (value, index) => {\n        this.props.handleChange(value, index)\n        this.clearFieldError()\n        this.validator.showMessages();\n        this.forceUpdate();\n    }\n\n    fileUpload = (file) => {\n        this.props.fileUpload(file)\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();        \n        if (this.validator.allValid()) {\n            this.props.handleSubmit(event)\n        } else {\n            this.validator.showMessages();\n            this.forceUpdate();\n        }\n    }\n\n    render() {\n        const { formFields, classes, submitText, submitFullWidth, fullWidth } = this.props\n        return (\n            <React.Fragment>\n                <form className={classes.form} noValidate onSubmit={this.handleSubmit}>\n\n                    {formFields.map((form, index) => {\n\n                        let helperText\n                        if (form.validation) {\n                            helperText = this.validator.message(form.name, form.value, form.validation)\n                        }\n\n                        if (this.getFieldError(form.name)) {\n                            helperText = this.getFieldError(form.name)\n                        }\n\n                        return (\n                            <RenderFormField\n                                key={index}\n                                fullWidth={fullWidth}\n                                helperText={helperText}\n                                index={index}\n                                form={form}\n                                handleChange={this.handleChange}\n                                fileUpload={this.fileUpload}\n                            />\n                        )\n                    })}\n\n\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth={submitFullWidth}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        {submitText}\n                    </Button>\n\n                </form>\n            </React.Fragment>\n        )\n\n    }\n}\n\nfunction mapState(state) {\n    const { formError } = state;\n    return {\n        formError\n    };\n}\n\nconst actionCreators = {\n    clearData: crudActions._clear,\n};\n\nexport default connect(mapState, actionCreators)(withStyles(styles)(MuiForm));\n"]},"metadata":{},"sourceType":"module"}