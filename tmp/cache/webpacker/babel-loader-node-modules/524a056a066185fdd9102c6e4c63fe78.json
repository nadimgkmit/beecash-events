{"ast":null,"code":"var _jsxFileName = \"/Users/jarvis/dev/beecash-events/app/javascript/packs/_component/material-table/index.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React from \"react\";\nimport MaterialTable from 'material-table';\nimport { crudService } from '../../_services';\n\nvar MaterialDataTable = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(MaterialDataTable, _React$PureComponent);\n\n  var _super = _createSuper(MaterialDataTable);\n\n  function MaterialDataTable(props) {\n    var _this;\n\n    _classCallCheck(this, MaterialDataTable);\n\n    _this = _super.call(this, props);\n\n    _this.fetchData = function () {\n      var serverSide = _this.props.serverSide;\n\n      if (!serverSide) {\n        crudService._getAll(_this.props.url, []).then(function (result) {\n          _this.setState({\n            resultData: result.data.data\n          });\n        });\n      }\n    };\n\n    _this.state = {\n      columns: _this.props.columns,\n      resultData: []\n    };\n    _this.tableRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(MaterialDataTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.tableRef.current) {\n        this.tableRef.current.onQueryChange();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          columns = _this$state.columns,\n          resultData = _this$state.resultData;\n      console.log('resultData', resultData);\n      var _this$props = this.props,\n          selection = _this$props.selection,\n          refresh = _this$props.refresh,\n          serverSide = _this$props.serverSide;\n      var actions = [];\n      var options = {\n        selection: selection,\n        actionsColumnIndex: -1,\n        search: true,\n        sorting: true,\n        filtering: true\n      };\n\n      if (this.props.deleteAll) {\n        actions.push({\n          icon: 'delete',\n          tooltip: 'Delete',\n          onClick: function onClick(event, rowData) {\n            _this2.props.deleteAll(rowData);\n          }\n        });\n      }\n\n      if (this.props.addData) {\n        actions.push({\n          icon: 'add',\n          tooltip: 'Add',\n          isFreeAction: true,\n          onClick: function onClick() {\n            _this2.props.addData();\n          }\n        });\n      }\n\n      if (refresh) {\n        actions.push({\n          icon: 'refresh',\n          tooltip: 'Refresh Data',\n          isFreeAction: true,\n          onClick: function onClick() {\n            return _this2.tableRef.current && _this2.tableRef.current.onQueryChange();\n          }\n        });\n      }\n\n      if (serverSide) {\n        return /*#__PURE__*/React.createElement(MaterialTable, {\n          tableRef: this.tableRef,\n          title: this.props.title,\n          data: function data(query) {\n            return new Promise(function (resolve, reject) {\n              crudService._getAll(_this2.props.url, query).then(function (result) {\n                if (result.status === 200) {\n                  resolve({\n                    data: result.data.data,\n                    page: result.data.page - 1,\n                    totalCount: Number(result.data.data)\n                  });\n                }\n              });\n            });\n          },\n          options: options,\n          actions: actions,\n          columns: columns,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(MaterialTable, {\n          title: this.props.title,\n          data: resultData,\n          options: options,\n          actions: actions,\n          columns: columns,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }\n        });\n      }\n    }\n  }]);\n\n  return MaterialDataTable;\n}(React.PureComponent);\n\nexport default MaterialDataTable;","map":{"version":3,"sources":["/Users/jarvis/dev/beecash-events/app/javascript/packs/_component/material-table/index.jsx"],"names":["React","MaterialTable","crudService","MaterialDataTable","props","fetchData","serverSide","_getAll","url","then","result","setState","resultData","data","state","columns","tableRef","createRef","current","onQueryChange","console","log","selection","refresh","actions","options","actionsColumnIndex","search","sorting","filtering","deleteAll","push","icon","tooltip","onClick","event","rowData","addData","isFreeAction","title","query","Promise","resolve","reject","status","page","totalCount","Number","PureComponent"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport MaterialTable from 'material-table';\nimport { crudService } from '../../_services';\n\nclass MaterialDataTable extends React.PureComponent {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            columns: this.props.columns,\n            resultData: []\n        }\n\n        this.tableRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.fetchData()\n    }\n\n    componentDidUpdate() {\n        if (this.tableRef.current) {\n            this.tableRef.current.onQueryChange()\n        }\n    }\n\n    fetchData = () => {\n        const { serverSide } = this.props\n        if (!serverSide) {\n            crudService._getAll(this.props.url, [])\n                .then(\n                    result => {                        \n                        this.setState({ resultData: result.data.data })\n                    }\n                );\n        }\n    }\n\n    render() {\n        const { columns, resultData } = this.state\n        console.log('resultData', resultData)\n        const { selection, refresh, serverSide } = this.props\n        const actions = []\n        const options = {\n            selection: selection,\n            actionsColumnIndex: -1,\n            search: true,\n            sorting: true,\n            filtering: true,\n        }\n\n        if (this.props.deleteAll) {\n            actions.push({\n                icon: 'delete',\n                tooltip: 'Delete',\n                onClick: (event, rowData) => {\n                    this.props.deleteAll(rowData);\n                }\n            })\n        }\n        if (this.props.addData) {\n            actions.push({\n                icon: 'add',\n                tooltip: 'Add',\n                isFreeAction: true,\n                onClick: () => {\n                    this.props.addData();\n                }\n            })\n        }\n\n        if (refresh) {\n            actions.push({\n                icon: 'refresh',\n                tooltip: 'Refresh Data',\n                isFreeAction: true,\n                onClick: () => this.tableRef.current && this.tableRef.current.onQueryChange()\n            })\n        }\n\n        if (serverSide) {\n            return (\n                <MaterialTable\n                    tableRef={this.tableRef}\n                    title={this.props.title}\n                    data={query =>\n                        new Promise((resolve, reject) => {\n                            crudService._getAll(this.props.url, query)\n                                .then(\n                                    result => {\n                                        if (result.status === 200) {\n                                            resolve({\n                                                data: result.data.data,\n                                                page: result.data.page - 1,\n                                                totalCount: Number(result.data.data),\n                                            })\n                                        }\n                                    }\n                                );\n                        })\n                    }\n                    options={options}\n                    actions={actions}\n                    columns={columns}\n                />);\n        } else {\n            return (\n                <MaterialTable                    \n                    title={this.props.title}\n                    data={resultData}\n                    options={options}\n                    actions={actions}\n                    columns={columns}\n                />\n            );\n        }\n\n    }\n}\n\nexport default MaterialDataTable;"]},"metadata":{},"sourceType":"module"}