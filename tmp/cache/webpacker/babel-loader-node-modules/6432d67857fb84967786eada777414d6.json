{"ast":null,"code":"import { crudConstants } from '../_constants';\nimport { crudService } from '../_services';\nimport { alertActions } from './alert.actions';\nimport { loaderActions } from './loader.actions';\nexport var crudActions = {\n  _getAll: _getAll,\n  _get: _get,\n  _create: _create,\n  _update: _update,\n  _delete: _delete,\n  _clear: _clear,\n  _add: _add\n};\n\nfunction _clear(kind) {\n  return {\n    type: \"\".concat(kind, \".\").concat(crudConstants.CLEAR)\n  };\n}\n\nfunction _add(kind, data) {\n  return {\n    type: \"\".concat(kind, \".\").concat(crudConstants.ADD),\n    data: data\n  };\n}\n\nfunction _get(kind, url, id) {\n  return function (dispatch) {\n    dispatch(loaderActions.show());\n    dispatch(request());\n\n    crudService._get(url, id).then(function (result) {\n      if (result.status === 200) {\n        dispatch(success(result.data));\n      }\n    }, function (error) {\n      dispatch(failure(error.message));\n    });\n  };\n\n  function request() {\n    return {\n      type: \"\".concat(kind, \".\").concat(crudConstants.GET_REQUEST)\n    };\n  }\n\n  function success(data) {\n    return {\n      type: \"\".concat(kind, \".\").concat(crudConstants.GET_SUCCESS),\n      data: data\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: \"\".concat(kind, \".\").concat(crudConstants.GET_FAILURE),\n      error: error\n    };\n  }\n}\n\nfunction _getAll(kind, url, filterData) {\n  return function (dispatch) {\n    dispatch(loaderActions.show());\n    dispatch(request());\n\n    crudService._getAll(url, filterData).then(function (result) {\n      if (result.status === 200) {\n        dispatch(success(result.data.data));\n      }\n    }, function (error) {\n      dispatch(failure(error.message));\n    });\n  };\n\n  function request() {\n    return {\n      type: \"\".concat(kind, \".\").concat(crudConstants.GET_ALL_REQUEST)\n    };\n  }\n\n  function success(data) {\n    return {\n      type: \"\".concat(kind, \".\").concat(crudConstants.GET_ALL_SUCCESS),\n      data: data\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: \"\".concat(kind, \".\").concat(crudConstants.GET_ALL_FAILURE),\n      error: error\n    };\n  }\n}\n\nfunction _create(kind, url, data) {\n  return function (dispatch) {\n    dispatch(loaderActions.show());\n    dispatch(request());\n\n    crudService._create(url, data).then(function (result) {\n      if (result.status === 200) {\n        dispatch(alertActions.success(result.data.message));\n        dispatch(success(null));\n        dispatch(_clear('formError'));\n        dispatch(_add('formSubmit', true));\n      }\n\n      if (result.status === 422) {\n        dispatch(_add('formError', result.data));\n        dispatch(_add('formSubmit', false));\n      }\n    }, function (error) {\n      dispatch(failure(error));\n    });\n  };\n\n  function request() {\n    return {\n      type: \"\".concat(kind, \".\").concat(crudConstants.CREATE_REQUEST)\n    };\n  }\n\n  function success(data) {\n    return {\n      type: \"\".concat(kind, \".\").concat(crudConstants.CREATE_SUCCESS),\n      data: data\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: \"\".concat(kind, \".\").concat(crudConstants.CREATE_FAILURE),\n      error: error\n    };\n  }\n}\n\nfunction _update(kind, url, id, data) {\n  return function (dispatch) {\n    dispatch(loaderActions.show());\n    dispatch(request());\n\n    crudService._update(url, id, data).then(function (result) {\n      if (result.status === 200) {\n        dispatch(alertActions.success(result.data.message));\n        dispatch(success(null));\n        dispatch(_clear('formError'));\n        dispatch(_add('formSubmit', true));\n      }\n\n      if (result.status === 422) {\n        dispatch(_add('formError', result.data));\n        dispatch(_add('formSubmit', false));\n      }\n    }, function (error) {\n      dispatch(failure(error));\n    });\n  };\n\n  function request() {\n    return {\n      type: \"\".concat(kind, \".\").concat(crudConstants.UPDATE_REQUEST)\n    };\n  }\n\n  function success(data) {\n    return {\n      type: \"\".concat(kind, \".\").concat(crudConstants.UPDATE_SUCCESS),\n      data: data\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: \"\".concat(kind, \".\").concat(crudConstants.UPDATE_FAILURE),\n      error: error\n    };\n  }\n}\n\nfunction _delete(kind, url, id) {\n  return function (dispatch) {\n    dispatch(loaderActions.show());\n    dispatch(request());\n\n    crudService._delete(url, id).then(function (result) {\n      if (result.status === 200) {\n        dispatch(alertActions.success(result.data.message));\n        dispatch(success(null));\n      }\n    }, function (error) {\n      dispatch(failure(error.message));\n    });\n  };\n\n  function request() {\n    return {\n      type: \"\".concat(kind, \".\").concat(crudConstants.DELETE_REQUEST)\n    };\n  }\n\n  function success(data) {\n    return {\n      type: \"\".concat(kind, \".\").concat(crudConstants.DELETE_SUCCESS),\n      data: data\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: \"\".concat(kind, \".\").concat(crudConstants.DELETE_FAILURE),\n      error: error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/jarvis/dev/beecash-events/app/javascript/packs/_actions/crud.actions.jsx"],"names":["crudConstants","crudService","alertActions","loaderActions","crudActions","_getAll","_get","_create","_update","_delete","_clear","_add","kind","type","CLEAR","data","ADD","url","id","dispatch","show","request","then","result","status","success","error","failure","message","GET_REQUEST","GET_SUCCESS","GET_FAILURE","filterData","GET_ALL_REQUEST","GET_ALL_SUCCESS","GET_ALL_FAILURE","CREATE_REQUEST","CREATE_SUCCESS","CREATE_FAILURE","UPDATE_REQUEST","UPDATE_SUCCESS","UPDATE_FAILURE","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE"],"mappings":"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","sourcesContent":["import { crudConstants } from '../_constants';\nimport { crudService } from '../_services';\nimport { alertActions } from './alert.actions';\nimport { loaderActions } from './loader.actions';\n\nexport const crudActions = {\n    _getAll,\n    _get,\n    _create,\n    _update,\n    _delete,\n    _clear,\n    _add\n};\n\nfunction _clear(kind) {\n    return { type: `${kind}.${crudConstants.CLEAR}` };\n}\n\nfunction _add(kind, data) {\n    return { type: `${kind}.${crudConstants.ADD}`, data };\n}\n\nfunction _get(kind, url, id) {\n    return dispatch => {\n        dispatch(loaderActions.show());\n        dispatch(request());\n        crudService._get(url, id)\n            .then(\n                result => {\n                    if (result.status === 200) {\n                        dispatch(success(result.data))\n                    }\n                },\n                error => {\n                    dispatch(failure(error.message));\n                }\n            );\n    };\n\n    function request() { return { type: `${kind}.${crudConstants.GET_REQUEST}` } }\n    function success(data) { return { type: `${kind}.${crudConstants.GET_SUCCESS}`, data } }\n    function failure(error) { return { type: `${kind}.${crudConstants.GET_FAILURE}`, error } }\n}\n\nfunction _getAll(kind, url, filterData) {\n    return dispatch => {\n        dispatch(loaderActions.show());\n        dispatch(request());\n        crudService._getAll(url, filterData)\n            .then(\n                result => {\n                    if (result.status === 200) {\n                        dispatch(success(result.data.data))\n                    }\n                },\n                error => {\n                    dispatch(failure(error.message));\n                }\n            );\n    };\n\n    function request() { return { type: `${kind}.${crudConstants.GET_ALL_REQUEST}` } }\n    function success(data) { return { type: `${kind}.${crudConstants.GET_ALL_SUCCESS}`, data } }\n    function failure(error) { return { type: `${kind}.${crudConstants.GET_ALL_FAILURE}`, error } }\n}\n\nfunction _create(kind, url, data) {\n    return dispatch => {\n        dispatch(loaderActions.show());\n        dispatch(request());\n        crudService._create(url, data)\n            .then(\n                result => {\n                    if (result.status === 200) {\n                        dispatch(alertActions.success(result.data.message));\n                        dispatch(success(null))\n                        dispatch(_clear('formError'))\n                        dispatch(_add('formSubmit', true))\n                    }\n                    if (result.status === 422) {\n                        dispatch(_add('formError', result.data))\n                        dispatch(_add('formSubmit', false))\n                    }\n                },\n                error => {\n                    dispatch(failure(error));\n                }\n            );\n    };\n\n    function request() { return { type: `${kind}.${crudConstants.CREATE_REQUEST}` } }\n    function success(data) { return { type: `${kind}.${crudConstants.CREATE_SUCCESS}`, data } }\n    function failure(error) { return { type: `${kind}.${crudConstants.CREATE_FAILURE}`, error } }\n}\n\nfunction _update(kind, url, id, data) {\n    return dispatch => {\n        dispatch(loaderActions.show());\n        dispatch(request());\n        crudService._update(url, id, data)\n            .then(\n                result => {\n                    if (result.status === 200) {\n                        dispatch(alertActions.success(result.data.message));\n                        dispatch(success(null))\n                        dispatch(_clear('formError'))\n                        dispatch(_add('formSubmit', true))\n                    }\n                    if (result.status === 422) {\n                        dispatch(_add('formError', result.data))\n                        dispatch(_add('formSubmit', false))\n                    }\n                }, error => {\n                    dispatch(failure(error));\n                }\n            );\n    };\n\n    function request() { return { type: `${kind}.${crudConstants.UPDATE_REQUEST}` } }\n    function success(data) { return { type: `${kind}.${crudConstants.UPDATE_SUCCESS}`, data } }\n    function failure(error) { return { type: `${kind}.${crudConstants.UPDATE_FAILURE}`, error } }\n}\n\nfunction _delete(kind, url, id) {\n    return dispatch => {\n        dispatch(loaderActions.show());\n        dispatch(request());\n        crudService._delete(url, id)\n            .then(\n                result => {\n                    if (result.status === 200) {\n                        dispatch(alertActions.success(result.data.message));\n                        dispatch(success(null))\n                    }\n                },\n                error => {\n                    dispatch(failure(error.message));\n                }\n            );\n    };\n\n    function request() { return { type: `${kind}.${crudConstants.DELETE_REQUEST}` } }\n    function success(data) { return { type: `${kind}.${crudConstants.DELETE_SUCCESS}`, data } }\n    function failure(error) { return { type: `${kind}.${crudConstants.DELETE_FAILURE}`, error } }\n}\n"]},"metadata":{},"sourceType":"module"}