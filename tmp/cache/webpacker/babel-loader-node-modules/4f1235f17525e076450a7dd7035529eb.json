{"ast":null,"code":"var _jsxFileName = \"/Users/jarvis/dev/beecash-events/app/javascript/packs/component/form/checkbox.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nvar MuiCheckBox = /*#__PURE__*/function (_React$Component) {\n  _inherits(MuiCheckBox, _React$Component);\n\n  var _super = _createSuper(MuiCheckBox);\n\n  function MuiCheckBox() {\n    var _this;\n\n    _classCallCheck(this, MuiCheckBox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleChange = function (e, index) {\n      e.persist();\n\n      _this.props.handleChange(e.target.checked, e.target.name, index);\n    };\n\n    return _this;\n  }\n\n  _createClass(MuiCheckBox, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          name = _this$props.name,\n          label = _this$props.label,\n          value = _this$props.value,\n          required = _this$props.required,\n          fullWidth = _this$props.fullWidth,\n          helperText = _this$props.helperText,\n          index = _this$props.index;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        error: helperText ? true : false,\n        fullWidth: fullWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        \"aria-label\": \"position\",\n        row: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FormControlLabel, {\n        checked: value ? true : false,\n        name: name,\n        control: /*#__PURE__*/React.createElement(Checkbox, {\n          color: \"primary\",\n          required: required,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 38\n          }\n        }),\n        label: label,\n        labelPlacement: \"end\",\n        onChange: function onChange(e) {\n          return _this2.handleChange(e, index);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }\n      })), helperText && /*#__PURE__*/React.createElement(FormHelperText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 36\n        }\n      }, helperText)));\n    }\n  }]);\n\n  return MuiCheckBox;\n}(React.Component);\n\nexport default MuiCheckBox;","map":{"version":3,"sources":["/Users/jarvis/dev/beecash-events/app/javascript/packs/component/form/checkbox.jsx"],"names":["React","Checkbox","FormGroup","FormControlLabel","FormControl","FormHelperText","MuiCheckBox","handleChange","e","index","persist","props","target","checked","name","label","value","required","fullWidth","helperText","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,OAAOC,cAAP,MAA2B,kCAA3B;;IAEMC,W;;;;;;;;;;;;;;;;UAEFC,Y,GAAe,UAACC,CAAD,EAAIC,KAAJ,EAAc;AACzBD,MAAAA,CAAC,CAACE,OAAF;;AACA,YAAKC,KAAL,CAAWJ,YAAX,CAAwBC,CAAC,CAACI,MAAF,CAASC,OAAjC,EAA0CL,CAAC,CAACI,MAAF,CAASE,IAAnD,EAAyDL,KAAzD;AACH,K;;;;;;;6BAEQ;AAAA;;AAAA,wBACkE,KAAKE,KADvE;AAAA,UACGG,IADH,eACGA,IADH;AAAA,UACSC,KADT,eACSA,KADT;AAAA,UACgBC,KADhB,eACgBA,KADhB;AAAA,UACuBC,QADvB,eACuBA,QADvB;AAAA,UACiCC,SADjC,eACiCA,SADjC;AAAA,UAC4CC,UAD5C,eAC4CA,UAD5C;AAAA,UACwDV,KADxD,eACwDA,KADxD;AAEL,0BACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,WAAD;AACI,QAAA,KAAK,EAAEU,UAAU,GAAG,IAAH,GAAU,KAD/B;AAEI,QAAA,SAAS,EAAED,SAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAII,oBAAC,SAAD;AAAW,sBAAW,UAAtB;AAAiC,QAAA,GAAG,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,gBAAD;AACI,QAAA,OAAO,EAAEF,KAAK,GAAG,IAAH,GAAU,KAD5B;AAEI,QAAA,IAAI,EAAEF,IAFV;AAGI,QAAA,OAAO,eAAE,oBAAC,QAAD;AAAU,UAAA,KAAK,EAAC,SAAhB;AAA0B,UAAA,QAAQ,EAAEG,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHb;AAII,QAAA,KAAK,EAAEF,KAJX;AAKI,QAAA,cAAc,EAAC,KALnB;AAMI,QAAA,QAAQ,EAAE,kBAAAP,CAAC;AAAA,iBAAI,MAAI,CAACD,YAAL,CAAkBC,CAAlB,EAAqBC,KAArB,CAAJ;AAAA,SANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,EAcKU,UAAU,iBAAI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBA,UAAjB,CAdnB,CADJ,CADJ;AAqBH;;;;EA9BqBnB,KAAK,CAACoB,S;;AAiChC,eAAed,WAAf","sourcesContent":["import React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nclass MuiCheckBox extends React.Component {\n\n    handleChange = (e, index) => {\n        e.persist()\n        this.props.handleChange(e.target.checked, e.target.name, index)\n    }\n\n    render() {\n        const { name, label, value, required, fullWidth, helperText, index } = this.props\n        return (\n            <React.Fragment>\n                <FormControl\n                    error={helperText ? true : false}\n                    fullWidth={fullWidth}\n                >\n                    <FormGroup aria-label=\"position\" row>\n                        <FormControlLabel\n                            checked={value ? true : false}\n                            name={name}\n                            control={<Checkbox color=\"primary\" required={required} />}\n                            label={label}\n                            labelPlacement=\"end\"\n                            onChange={e => this.handleChange(e, index)}\n                        />\n                    </FormGroup>\n                    {helperText && <FormHelperText>{helperText}</FormHelperText>}\n                </FormControl>\n            </React.Fragment>\n        )\n\n    }\n}\n\nexport default MuiCheckBox;"]},"metadata":{},"sourceType":"module"}