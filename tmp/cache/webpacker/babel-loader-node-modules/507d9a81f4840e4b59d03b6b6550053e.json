{"ast":null,"code":"var _jsxFileName = \"/Users/jarvis/dev/beecash-events/app/javascript/packs/component/form/renderFormField.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React from 'react';\nimport MuiTextBox from './textbox';\nimport MuiCheckBox from './checkbox';\nimport MuiPassTextBox from './password';\nimport MuiSelectBox from './selectbox';\nimport MuiMultiSelectBox from './multiselectbox';\nimport MuiDatePicker from './date';\nimport MuiTimePicker from './time';\nimport MuiDateTimePicker from './datetime';\nimport FileField from './file';\nimport MuiAutocompleteBox from './autocomplete';\nimport MuiMultiAutocompleteBox from './multiAutocomplete';\n\nvar RenderFormField = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(RenderFormField, _React$PureComponent);\n\n  var _super = _createSuper(RenderFormField);\n\n  function RenderFormField() {\n    var _this;\n\n    _classCallCheck(this, RenderFormField);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleChange = function (value, index) {\n      _this.props.handleChange(value, index);\n    };\n\n    return _this;\n  }\n\n  _createClass(RenderFormField, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          form = _this$props.form,\n          fullWidth = _this$props.fullWidth,\n          helperText = _this$props.helperText,\n          index = _this$props.index;\n\n      switch (form.type) {\n        case 'autocomplete':\n          return /*#__PURE__*/React.createElement(MuiAutocompleteBox, {\n            label: form.label,\n            name: form.name,\n            required: form.required,\n            fullWidth: fullWidth,\n            helperText: helperText,\n            index: index,\n            key: index,\n            value: form.value,\n            url: form.url,\n            getOptionLabel: form.getOptionLabel,\n            handleChange: this.handleChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 21\n            }\n          });\n\n        case 'multi_autocomplete':\n          return /*#__PURE__*/React.createElement(MuiMultiAutocompleteBox, {\n            label: form.label,\n            name: form.name,\n            required: form.required,\n            fullWidth: fullWidth,\n            helperText: helperText,\n            index: index,\n            key: index,\n            value: form.value,\n            url: form.url,\n            getOptionLabel: form.getOptionLabel,\n            handleChange: this.handleChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }\n          });\n\n        case 'select':\n          return /*#__PURE__*/React.createElement(MuiSelectBox, {\n            label: form.label,\n            name: form.name,\n            required: form.required,\n            fullWidth: fullWidth,\n            helperText: helperText,\n            index: index,\n            key: index,\n            value: form.value,\n            options: form.options,\n            handleChange: this.handleChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }\n          });\n\n        case 'multiselect':\n          return /*#__PURE__*/React.createElement(MuiMultiSelectBox, {\n            label: form.label,\n            name: form.name,\n            required: form.required,\n            fullWidth: fullWidth,\n            helperText: helperText,\n            index: index,\n            key: index,\n            value: form.value,\n            options: form.options,\n            handleChange: this.handleChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }\n          });\n\n        case 'password':\n          return /*#__PURE__*/React.createElement(MuiPassTextBox, {\n            label: form.label,\n            name: form.name,\n            required: form.required,\n            fullWidth: fullWidth,\n            helperText: helperText,\n            index: index,\n            key: index,\n            value: form.value,\n            handleChange: this.handleChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }\n          });\n\n        case 'file':\n          return /*#__PURE__*/React.createElement(FileField, {\n            label: form.label,\n            name: form.name,\n            type: form.type,\n            icon: form.icon,\n            fullWidth: fullWidth,\n            helperText: helperText,\n            index: index,\n            key: index,\n            value: form.value,\n            editable: form.editable,\n            accept: form.accept,\n            handleChange: this.handleChange,\n            fileUpload: this.fileUpload,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 21\n            }\n          });\n\n        case 'checkbox':\n          return /*#__PURE__*/React.createElement(MuiCheckBox, {\n            label: form.label,\n            name: form.name,\n            required: form.required,\n            fullWidth: fullWidth,\n            helperText: helperText,\n            index: index,\n            key: index,\n            value: form.value,\n            handleChange: this.handleChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 21\n            }\n          });\n\n        case 'date':\n          return /*#__PURE__*/React.createElement(MuiDatePicker, {\n            label: form.label,\n            name: form.name,\n            required: form.required,\n            fullWidth: fullWidth,\n            helperText: helperText,\n            index: index,\n            key: index,\n            value: form.value,\n            variant: form.variant,\n            format: form.format,\n            handleChange: this.handleChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 21\n            }\n          });\n\n        case 'datetime':\n          return /*#__PURE__*/React.createElement(MuiDateTimePicker, {\n            label: form.label,\n            name: form.name,\n            required: form.required,\n            fullWidth: fullWidth,\n            helperText: helperText,\n            index: index,\n            key: index,\n            value: form.value,\n            variant: form.variant,\n            format: form.format,\n            handleChange: this.handleChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 21\n            }\n          });\n\n        case 'time':\n          return /*#__PURE__*/React.createElement(MuiTimePicker, {\n            label: form.label,\n            name: form.name,\n            required: form.required,\n            fullWidth: fullWidth,\n            helperText: helperText,\n            index: index,\n            key: index,\n            value: form.value,\n            variant: form.variant,\n            format: form.format,\n            handleChange: this.handleChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 21\n            }\n          });\n\n        default:\n          return /*#__PURE__*/React.createElement(MuiTextBox, {\n            label: form.label,\n            name: form.name,\n            type: form.type,\n            icon: form.icon,\n            multiline: form.multiline,\n            rowsMax: form.rowsMax,\n            fullWidth: fullWidth,\n            helperText: helperText,\n            index: index,\n            key: index,\n            value: form.value,\n            handleChange: this.handleChange,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 21\n            }\n          });\n      }\n    }\n  }]);\n\n  return RenderFormField;\n}(React.PureComponent);\n\nexport default RenderFormField;","map":{"version":3,"sources":["/Users/jarvis/dev/beecash-events/app/javascript/packs/component/form/renderFormField.jsx"],"names":["React","MuiTextBox","MuiCheckBox","MuiPassTextBox","MuiSelectBox","MuiMultiSelectBox","MuiDatePicker","MuiTimePicker","MuiDateTimePicker","FileField","MuiAutocompleteBox","MuiMultiAutocompleteBox","RenderFormField","handleChange","value","index","props","form","fullWidth","helperText","type","label","name","required","url","getOptionLabel","options","icon","editable","accept","fileUpload","variant","format","multiline","rowsMax","PureComponent"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport MuiTextBox from './textbox'\nimport MuiCheckBox from './checkbox'\nimport MuiPassTextBox from './password'\nimport MuiSelectBox from './selectbox'\nimport MuiMultiSelectBox from './multiselectbox'\nimport MuiDatePicker from './date'\nimport MuiTimePicker from './time'\nimport MuiDateTimePicker from './datetime'\nimport FileField from './file'\nimport MuiAutocompleteBox from './autocomplete'\nimport MuiMultiAutocompleteBox from './multiAutocomplete'\n\nclass RenderFormField extends React.PureComponent {\n\n    handleChange = (value, index) => {\n        this.props.handleChange(value, index)\n    }\n\n    render() {\n        const { form, fullWidth, helperText, index } = this.props\n        switch (form.type) {\n            case 'autocomplete':\n                return (\n                    <MuiAutocompleteBox\n                        label={form.label}\n                        name={form.name}\n                        required={form.required}\n                        fullWidth={fullWidth}\n                        helperText={helperText}\n                        index={index}\n                        key={index}\n                        value={form.value}                        \n                        url={form.url}\n                        getOptionLabel={form.getOptionLabel}\n                        handleChange={this.handleChange}\n                    />\n                )\n            case 'multi_autocomplete':\n                return (\n                    <MuiMultiAutocompleteBox\n                        label={form.label}\n                        name={form.name}\n                        required={form.required}\n                        fullWidth={fullWidth}\n                        helperText={helperText}\n                        index={index}\n                        key={index}\n                        value={form.value}                        \n                        url={form.url}\n                        getOptionLabel={form.getOptionLabel}\n                        handleChange={this.handleChange}\n                    />\n                )\n            case 'select':\n                return (\n                    <MuiSelectBox\n                        label={form.label}\n                        name={form.name}\n                        required={form.required}\n                        fullWidth={fullWidth}\n                        helperText={helperText}\n                        index={index}\n                        key={index}\n                        value={form.value}\n                        options={form.options}\n                        handleChange={this.handleChange}\n                    />\n                )\n            case 'multiselect':\n                return (\n                    <MuiMultiSelectBox\n                        label={form.label}\n                        name={form.name}\n                        required={form.required}\n                        fullWidth={fullWidth}\n                        helperText={helperText}\n                        index={index}\n                        key={index}\n                        value={form.value}\n                        options={form.options}\n                        handleChange={this.handleChange}\n                    />\n                )\n            case 'password':\n                return (\n                    <MuiPassTextBox\n                        label={form.label}\n                        name={form.name}\n                        required={form.required}\n                        fullWidth={fullWidth}\n                        helperText={helperText}\n                        index={index}\n                        key={index}\n                        value={form.value}\n                        handleChange={this.handleChange}\n                    />\n                )\n\n            case 'file':\n                return (\n                    <FileField\n                        label={form.label}\n                        name={form.name}\n                        type={form.type}\n                        icon={form.icon}\n                        fullWidth={fullWidth}\n                        helperText={helperText}\n                        index={index}\n                        key={index}\n                        value={form.value}\n                        editable={form.editable}\n                        accept={form.accept}\n                        handleChange={this.handleChange}\n                        fileUpload={this.fileUpload}\n                    />\n                )\n            case 'checkbox':\n                return (\n                    <MuiCheckBox\n                        label={form.label}\n                        name={form.name}\n                        required={form.required}\n                        fullWidth={fullWidth}\n                        helperText={helperText}\n                        index={index}\n                        key={index}\n                        value={form.value}\n                        handleChange={this.handleChange}\n                    />\n                )\n\n            case 'date':\n                return (\n                    <MuiDatePicker\n                        label={form.label}\n                        name={form.name}\n                        required={form.required}\n                        fullWidth={fullWidth}\n                        helperText={helperText}\n                        index={index}\n                        key={index}\n                        value={form.value}\n                        variant={form.variant}\n                        format={form.format}\n                        handleChange={this.handleChange}\n                    />\n                )\n            case 'datetime':\n                return (\n                    <MuiDateTimePicker\n                        label={form.label}\n                        name={form.name}\n                        required={form.required}\n                        fullWidth={fullWidth}\n                        helperText={helperText}\n                        index={index}\n                        key={index}\n                        value={form.value}\n                        variant={form.variant}\n                        format={form.format}\n                        handleChange={this.handleChange}\n                    />\n                )\n            case 'time':\n                return (\n                    <MuiTimePicker\n                        label={form.label}\n                        name={form.name}\n                        required={form.required}\n                        fullWidth={fullWidth}\n                        helperText={helperText}\n                        index={index}\n                        key={index}\n                        value={form.value}\n                        variant={form.variant}\n                        format={form.format}\n                        handleChange={this.handleChange}\n                    />\n                )\n\n            default:\n                return (\n                    <MuiTextBox\n                        label={form.label}\n                        name={form.name}\n                        type={form.type}\n                        icon={form.icon}\n                        multiline={form.multiline}\n                        rowsMax={form.rowsMax}\n                        fullWidth={fullWidth}\n                        helperText={helperText}\n                        index={index}\n                        key={index}\n                        value={form.value}\n                        handleChange={this.handleChange}\n                    />\n                )\n        }\n    }\n}\n\nexport default RenderFormField"]},"metadata":{},"sourceType":"module"}