{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { authentication } from './authentication.reducer';\nimport { alert } from './alert.reducer';\nimport { loader } from './loader.reducer';\nimport { confirm } from './confirm.reducer';\nimport { fileUpload } from './file.reducer';\nimport crud from './crud.reducer';\nimport { reducerData } from './assign.reducer';\nimport { modal } from './modal.reducer';\nvar reducers = {};\nreducers['authentication'] = authentication;\nreducers['loader'] = loader;\nreducers['alert'] = alert;\nreducers['confirm'] = confirm;\nreducers['fileUpload'] = fileUpload;\nreducers['modal'] = modal;\nreducerData.forEach(function (element) {\n  reducers[element] = crud(element);\n});\nvar rootReducer = combineReducers(reducers);\nexport default rootReducer;","map":{"version":3,"sources":["/Users/jarvis/dev/beecash-events/app/javascript/packs/_reducers/index.jsx"],"names":["combineReducers","authentication","alert","loader","confirm","fileUpload","crud","reducerData","modal","reducers","forEach","element","rootReducer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AAEA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,KAAT,QAAsB,iBAAtB;AAEA,IAAMC,QAAQ,GAAG,EAAjB;AACAA,QAAQ,CAAC,gBAAD,CAAR,GAA6BR,cAA7B;AACAQ,QAAQ,CAAC,QAAD,CAAR,GAAqBN,MAArB;AACAM,QAAQ,CAAC,OAAD,CAAR,GAAoBP,KAApB;AACAO,QAAQ,CAAC,SAAD,CAAR,GAAsBL,OAAtB;AACAK,QAAQ,CAAC,YAAD,CAAR,GAAyBJ,UAAzB;AACAI,QAAQ,CAAC,OAAD,CAAR,GAAoBD,KAApB;AAEAD,WAAW,CAACG,OAAZ,CAAoB,UAAAC,OAAO,EAAI;AAC3BF,EAAAA,QAAQ,CAACE,OAAD,CAAR,GAAoBL,IAAI,CAACK,OAAD,CAAxB;AACH,CAFD;AAIA,IAAMC,WAAW,GAAGZ,eAAe,CAC/BS,QAD+B,CAAnC;AAIA,eAAeG,WAAf","sourcesContent":["import { combineReducers } from 'redux';\n\nimport { authentication } from './authentication.reducer';\nimport { alert } from './alert.reducer';\nimport { loader } from './loader.reducer';\nimport { confirm } from './confirm.reducer';\nimport { fileUpload } from './file.reducer';\nimport crud from './crud.reducer';\nimport { reducerData } from './assign.reducer';\nimport { modal } from './modal.reducer';\n\nconst reducers = {}\nreducers['authentication'] = authentication\nreducers['loader'] = loader\nreducers['alert'] = alert\nreducers['confirm'] = confirm\nreducers['fileUpload'] = fileUpload\nreducers['modal'] = modal\n\nreducerData.forEach(element => {\n    reducers[element] = crud(element)\n});\n\nconst rootReducer = combineReducers(\n    reducers\n);\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}