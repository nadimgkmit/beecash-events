{"ast":null,"code":"import { fileConstants } from '../_constants';\nimport { fileService } from '../_services';\nimport { alertActions } from './alert.actions';\nexport var fileActions = {\n  _upload: _upload,\n  _clear: _clear\n};\n\nfunction _clear() {\n  return {\n    type: fileConstants.CLEAR\n  };\n}\n\nfunction _upload(data, type) {\n  return function (dispatch) {\n    dispatch(request());\n\n    fileService._upload(data, type).then(function (result) {\n      dispatch(alertActions.success(result.data.message));\n      dispatch(success(result.data));\n    }, function (error) {\n      dispatch(failure(error.message));\n      dispatch(alertActions.error(error.message));\n    });\n  };\n\n  function request() {\n    return {\n      type: fileConstants.UPLOAD_REQUEST\n    };\n  }\n\n  function success(data) {\n    return {\n      type: fileConstants.UPLOAD_SUCCESS,\n      data: data\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: fileConstants.UPLOAD_FAILURE,\n      error: error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/jarvis/dev/beecash-events/app/javascript/packs/_actions/file.actions.jsx"],"names":["fileConstants","fileService","alertActions","fileActions","_upload","_clear","type","CLEAR","data","dispatch","request","then","result","success","message","error","failure","UPLOAD_REQUEST","UPLOAD_SUCCESS","UPLOAD_FAILURE"],"mappings":"AAAA,SAASA,aAAT,QAA8B,eAA9B;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,OAAO,IAAMC,WAAW,GAAG;AACvBC,EAAAA,OAAO,EAAPA,OADuB;AAEvBC,EAAAA,MAAM,EAANA;AAFuB,CAApB;;AAKP,SAASA,MAAT,GAAkB;AACd,SAAO;AAAEC,IAAAA,IAAI,EAAEN,aAAa,CAACO;AAAtB,GAAP;AACH;;AAED,SAASH,OAAT,CAAiBI,IAAjB,EAAuBF,IAAvB,EAA6B;AACzB,SAAO,UAAAG,QAAQ,EAAI;AACfA,IAAAA,QAAQ,CAACC,OAAO,EAAR,CAAR;;AACAT,IAAAA,WAAW,CAACG,OAAZ,CAAoBI,IAApB,EAA0BF,IAA1B,EACKK,IADL,CAEQ,UAAAC,MAAM,EAAI;AACNH,MAAAA,QAAQ,CAACP,YAAY,CAACW,OAAb,CAAqBD,MAAM,CAACJ,IAAP,CAAYM,OAAjC,CAAD,CAAR;AACAL,MAAAA,QAAQ,CAACI,OAAO,CAACD,MAAM,CAACJ,IAAR,CAAR,CAAR;AACH,KALT,EAMQ,UAAAO,KAAK,EAAI;AACLN,MAAAA,QAAQ,CAACO,OAAO,CAACD,KAAK,CAACD,OAAP,CAAR,CAAR;AACAL,MAAAA,QAAQ,CAACP,YAAY,CAACa,KAAb,CAAmBA,KAAK,CAACD,OAAzB,CAAD,CAAR;AACH,KATT;AAWH,GAbD;;AAeA,WAASJ,OAAT,GAAmB;AAAE,WAAO;AAAEJ,MAAAA,IAAI,EAAEN,aAAa,CAACiB;AAAtB,KAAP;AAA+C;;AACpE,WAASJ,OAAT,CAAiBL,IAAjB,EAAuB;AAAE,WAAO;AAAEF,MAAAA,IAAI,EAAEN,aAAa,CAACkB,cAAtB;AAAsCV,MAAAA,IAAI,EAAJA;AAAtC,KAAP;AAAqD;;AAC9E,WAASQ,OAAT,CAAiBD,KAAjB,EAAwB;AAAE,WAAO;AAAET,MAAAA,IAAI,EAAEN,aAAa,CAACmB,cAAtB;AAAsCJ,MAAAA,KAAK,EAALA;AAAtC,KAAP;AAAsD;AACnF","sourcesContent":["import { fileConstants } from '../_constants';\nimport { fileService } from '../_services';\nimport { alertActions } from './alert.actions';\n\nexport const fileActions = {\n    _upload,\n    _clear\n};\n\nfunction _clear() {\n    return { type: fileConstants.CLEAR };\n}\n\nfunction _upload(data, type) {\n    return dispatch => {\n        dispatch(request());\n        fileService._upload(data, type)\n            .then(\n                result => {\n                    dispatch(alertActions.success(result.data.message));\n                    dispatch(success(result.data))\n                },\n                error => {\n                    dispatch(failure(error.message));\n                    dispatch(alertActions.error(error.message));\n                }\n            );\n    };\n\n    function request() { return { type: fileConstants.UPLOAD_REQUEST } }\n    function success(data) { return { type: fileConstants.UPLOAD_SUCCESS, data } }\n    function failure(error) { return { type: fileConstants.UPLOAD_FAILURE, error } }\n}\n"]},"metadata":{},"sourceType":"module"}