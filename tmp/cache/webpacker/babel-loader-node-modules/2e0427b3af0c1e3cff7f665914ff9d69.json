{"ast":null,"code":"import { crudConstants } from '../_constants';\n\nvar crud = function crud(kind) {\n  return function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    switch (action.type) {\n      // get call \n      case \"\".concat(kind, \".\").concat(crudConstants.GET_REQUEST):\n        return null;\n\n      case \"\".concat(kind, \".\").concat(crudConstants.GET_SUCCESS):\n        return action.data;\n\n      case \"\".concat(kind, \".\").concat(crudConstants.GET_FAILURE):\n        return null;\n      // get all call \n\n      case \"\".concat(kind, \".\").concat(crudConstants.GET_ALL_REQUEST):\n        return null;\n\n      case \"\".concat(kind, \".\").concat(crudConstants.GET_ALL_SUCCESS):\n        return action.data;\n\n      case \"\".concat(kind, \".\").concat(crudConstants.GET_ALL_FAILURE):\n        return null;\n      // create call\n\n      case \"\".concat(kind, \".\").concat(crudConstants.CREATE_REQUEST):\n        return null;\n\n      case \"\".concat(kind, \".\").concat(crudConstants.CREATE_SUCCESS):\n        return action.data;\n\n      case \"\".concat(kind, \".\").concat(crudConstants.CREATE_FAILURE):\n        return null;\n      // update call\n\n      case \"\".concat(kind, \".\").concat(crudConstants.UPDATE_REQUEST):\n        return null;\n\n      case \"\".concat(kind, \".\").concat(crudConstants.UPDATE_SUCCESS):\n        return action.data;\n\n      case \"\".concat(kind, \".\").concat(crudConstants.UPDATE_FAILURE):\n        return null;\n      // delete call\n\n      case \"\".concat(kind, \".\").concat(crudConstants.DELETE_REQUEST):\n        return null;\n\n      case \"\".concat(kind, \".\").concat(crudConstants.DELETE_SUCCESS):\n        return action.data;\n\n      case \"\".concat(kind, \".\").concat(crudConstants.DELETE_FAILURE):\n        return null;\n      // add data\n\n      case \"\".concat(kind, \".\").concat(crudConstants.ADD):\n        return action.data;\n      // clear data\n\n      case \"\".concat(kind, \".\").concat(crudConstants.CLEAR):\n        return null;\n\n      default:\n        return state;\n    }\n  };\n};\n\nexport default crud;","map":{"version":3,"sources":["/Users/jarvis/dev/beecash-events/app/javascript/packs/_reducers/crud.reducer.jsx"],"names":["crudConstants","crud","kind","state","action","type","GET_REQUEST","GET_SUCCESS","data","GET_FAILURE","GET_ALL_REQUEST","GET_ALL_SUCCESS","GET_ALL_FAILURE","CREATE_REQUEST","CREATE_SUCCESS","CREATE_FAILURE","UPDATE_REQUEST","UPDATE_SUCCESS","UPDATE_FAILURE","DELETE_REQUEST","DELETE_SUCCESS","DELETE_FAILURE","ADD","CLEAR"],"mappings":"AAAA,SAASA,aAAT,QAA8B,eAA9B;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,IAAD;AAAA,SAAW,YAA0B;AAAA,QAAzBC,KAAyB,uEAAjB,IAAiB;AAAA,QAAXC,MAAW;;AAC9C,YAAQA,MAAM,CAACC,IAAf;AACI;AACA,qBAAQH,IAAR,cAAgBF,aAAa,CAACM,WAA9B;AACI,eAAO,IAAP;;AACJ,qBAAQJ,IAAR,cAAgBF,aAAa,CAACO,WAA9B;AACI,eAAOH,MAAM,CAACI,IAAd;;AACJ,qBAAQN,IAAR,cAAgBF,aAAa,CAACS,WAA9B;AACI,eAAO,IAAP;AAEJ;;AACA,qBAAQP,IAAR,cAAgBF,aAAa,CAACU,eAA9B;AACI,eAAO,IAAP;;AACJ,qBAAQR,IAAR,cAAgBF,aAAa,CAACW,eAA9B;AACI,eAAOP,MAAM,CAACI,IAAd;;AACJ,qBAAQN,IAAR,cAAgBF,aAAa,CAACY,eAA9B;AACI,eAAO,IAAP;AAEJ;;AACA,qBAAQV,IAAR,cAAgBF,aAAa,CAACa,cAA9B;AACI,eAAO,IAAP;;AACJ,qBAAQX,IAAR,cAAgBF,aAAa,CAACc,cAA9B;AACI,eAAOV,MAAM,CAACI,IAAd;;AACJ,qBAAQN,IAAR,cAAgBF,aAAa,CAACe,cAA9B;AACI,eAAO,IAAP;AAEJ;;AACA,qBAAQb,IAAR,cAAgBF,aAAa,CAACgB,cAA9B;AACI,eAAO,IAAP;;AACJ,qBAAQd,IAAR,cAAgBF,aAAa,CAACiB,cAA9B;AACI,eAAOb,MAAM,CAACI,IAAd;;AACJ,qBAAQN,IAAR,cAAgBF,aAAa,CAACkB,cAA9B;AACI,eAAO,IAAP;AAEJ;;AACA,qBAAQhB,IAAR,cAAgBF,aAAa,CAACmB,cAA9B;AACI,eAAO,IAAP;;AACJ,qBAAQjB,IAAR,cAAgBF,aAAa,CAACoB,cAA9B;AACI,eAAOhB,MAAM,CAACI,IAAd;;AACJ,qBAAQN,IAAR,cAAgBF,aAAa,CAACqB,cAA9B;AACI,eAAO,IAAP;AAEJ;;AACA,qBAAQnB,IAAR,cAAgBF,aAAa,CAACsB,GAA9B;AACI,eAAOlB,MAAM,CAACI,IAAd;AACJ;;AACA,qBAAQN,IAAR,cAAgBF,aAAa,CAACuB,KAA9B;AACI,eAAO,IAAP;;AACJ;AACI,eAAOpB,KAAP;AAhDR;AAkDH,GAnDY;AAAA,CAAb;;AAqDA,eAAeF,IAAf","sourcesContent":["import { crudConstants } from '../_constants';\n\nconst crud = (kind) => ((state = null, action) => {\n    switch (action.type) {\n        // get call \n        case `${kind}.${crudConstants.GET_REQUEST}`:\n            return null;\n        case `${kind}.${crudConstants.GET_SUCCESS}`:\n            return action.data;\n        case `${kind}.${crudConstants.GET_FAILURE}`:\n            return null;\n\n        // get all call \n        case `${kind}.${crudConstants.GET_ALL_REQUEST}`:\n            return null;\n        case `${kind}.${crudConstants.GET_ALL_SUCCESS}`:\n            return action.data;\n        case `${kind}.${crudConstants.GET_ALL_FAILURE}`:\n            return null;\n\n        // create call\n        case `${kind}.${crudConstants.CREATE_REQUEST}`:\n            return null;\n        case `${kind}.${crudConstants.CREATE_SUCCESS}`:\n            return action.data;\n        case `${kind}.${crudConstants.CREATE_FAILURE}`:\n            return null;\n\n        // update call\n        case `${kind}.${crudConstants.UPDATE_REQUEST}`:\n            return null;\n        case `${kind}.${crudConstants.UPDATE_SUCCESS}`:\n            return action.data\n        case `${kind}.${crudConstants.UPDATE_FAILURE}`:\n            return null\n\n        // delete call\n        case `${kind}.${crudConstants.DELETE_REQUEST}`:\n            return null\n        case `${kind}.${crudConstants.DELETE_SUCCESS}`:\n            return action.data\n        case `${kind}.${crudConstants.DELETE_FAILURE}`:\n            return null\n\n        // add data\n        case `${kind}.${crudConstants.ADD}`:\n            return action.data\n        // clear data\n        case `${kind}.${crudConstants.CLEAR}`:\n            return null\n        default:\n            return state\n    }\n})\n\nexport default crud;"]},"metadata":{},"sourceType":"module"}