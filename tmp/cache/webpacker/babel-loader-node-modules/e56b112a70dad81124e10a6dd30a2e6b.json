{"ast":null,"code":"var _jsxFileName = \"/Users/jarvis/dev/beecash-events/app/javascript/packs/component/form/stepper.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport SimpleReactValidator from 'simple-react-validator';\nimport { connect } from 'react-redux';\nimport { crudActions } from '../../_actions';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport RenderFormField from './renderFormField';\n\nvar styles = function styles(theme) {\n  return {\n    button: {\n      marginRight: theme.spacing(1)\n    },\n    stepWrapper: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1)\n    },\n    stepButtonWrapper: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(1)\n    },\n    form: {\n      width: '100%',\n      // Fix IE 11 issue.\n      marginTop: theme.spacing(1)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    }\n  };\n};\n\nvar MuiForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(MuiForm, _React$Component);\n\n  var _super = _createSuper(MuiForm);\n\n  function MuiForm() {\n    var _this;\n\n    _classCallCheck(this, MuiForm);\n\n    _this = _super.call(this);\n\n    _this.clearFieldError = function () {\n      _this.props.clearData('formError');\n    };\n\n    _this.getFieldError = function (field) {\n      var formError = _this.props.formError;\n      var error;\n\n      if (formError) {\n        formError.forEach(function (element) {\n          if (element.field === field) {\n            error = element.message;\n          }\n        });\n      }\n\n      return error;\n    };\n\n    _this.setActiveStep = function (value) {\n      _this.setState({\n        activeStep: value\n      });\n    };\n\n    _this.setSkipped = function (value) {\n      _this.setState({\n        skipped: value\n      });\n    };\n\n    _this.isStepOptional = function (step) {\n      var steps = _this.props.steps;\n      var optional = steps.findIndex(function (step) {\n        return step.optional === true;\n      });\n      return step === optional;\n    };\n\n    _this.isStepSkipped = function (step) {\n      var skipped = _this.state.skipped;\n      return step === skipped;\n    };\n\n    _this.handleNext = function () {\n      var activeStep = _this.state.activeStep;\n      var steps = _this.props.steps;\n\n      _this.validator.hideMessages();\n\n      var isValid = true;\n\n      if (steps) {\n        steps.forEach(function (element, index) {\n          if (activeStep === index) {\n            if (element.formFields) {\n              element.formFields.forEach(function (formField) {\n                if (formField.validation && !_this.validator.fieldValid(formField.name)) {\n                  isValid = false;\n                }\n              });\n            }\n          }\n        });\n      }\n\n      if (isValid) {\n        _this.isStepSkipped(activeStep);\n\n        _this.setActiveStep(activeStep + 1);\n\n        _this.setSkipped(activeStep + 1);\n      } else {\n        _this.validator.showMessages();\n\n        _this.forceUpdate();\n      }\n    };\n\n    _this.handleBack = function () {\n      var activeStep = _this.state.activeStep;\n\n      _this.setActiveStep(activeStep - 1);\n    };\n\n    _this.handleSkip = function () {\n      var activeStep = _this.state.activeStep;\n\n      if (!_this.isStepOptional(activeStep)) {\n        // You probably want to guard against something like this,\n        // it should never occur unless someone's actively trying to break something.\n        throw new Error(\"You can't skip a step that isn't optional.\");\n      }\n\n      _this.setActiveStep(activeStep + 1);\n\n      _this.setSkipped(activeStep);\n    };\n\n    _this.handleReset = function () {\n      _this.setActiveStep(0);\n    };\n\n    _this.confirmPanel = function () {\n      var _this$props = _this.props,\n          classes = _this$props.classes,\n          submitText = _this$props.submitText,\n          submitFullWidth = _this$props.submitFullWidth;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        className: classes.stepWrapper,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      }, \"All steps completed - you're finished\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: _this.handleReset,\n        className: classes.button,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      }, \"Reset\"), /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        fullWidth: submitFullWidth,\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.submit,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }\n      }, submitText));\n    };\n\n    _this.handleChange = function (value, index) {\n      _this.props.handleChange(value, index);\n\n      _this.clearFieldError();\n    };\n\n    _this.fileUpload = function (file) {\n      _this.props.fileUpload(file);\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      if (!_this.props.formSubmit) {\n        _this.handleReset();\n      }\n\n      if (_this.validator.allValid()) {\n        _this.props.handleSubmit(event);\n      } else {\n        _this.validator.showMessages();\n\n        _this.forceUpdate();\n      }\n    };\n\n    _this.state = {\n      activeStep: 0,\n      skipped: null\n    };\n    _this.validator = new SimpleReactValidator({\n      autoForceUpdate: _assertThisInitialized(_this),\n      element: function element(message) {\n        return message;\n      }\n    });\n    return _this;\n  }\n\n  _createClass(MuiForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var activeStep = this.state.activeStep;\n      var _this$props2 = this.props,\n          steps = _this$props2.steps,\n          classes = _this$props2.classes,\n          fullWidth = _this$props2.fullWidth;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        className: classes.form,\n        noValidate: true,\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Stepper, {\n        activeStep: activeStep,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }\n      }, steps.map(function (step, index) {\n        var stepProps = {};\n        var labelProps = {};\n\n        if (step.optional) {\n          labelProps.optional = /*#__PURE__*/React.createElement(Typography, {\n            variant: \"caption\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 55\n            }\n          }, \"Optional\");\n        }\n\n        if (_this2.isStepSkipped(index)) {\n          stepProps.completed = false;\n        }\n\n        return /*#__PURE__*/React.createElement(Step, Object.assign({\n          key: step.label\n        }, stepProps, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(StepLabel, Object.assign({}, labelProps, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 37\n          }\n        }), step.label));\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }\n      }, activeStep === steps.length ? this.confirmPanel() : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 33\n        }\n      }, steps.map(function (step, index) {\n        if (index === activeStep) {\n          return step.formFields.map(function (form, index) {\n            var helperText;\n\n            if (form.validation) {\n              helperText = _this2.validator.message(form.name, form.value, form.validation);\n            }\n\n            if (_this2.getFieldError(form.name)) {\n              helperText = _this2.getFieldError(form.name);\n            }\n\n            return /*#__PURE__*/React.createElement(RenderFormField, {\n              fullWidth: fullWidth,\n              helperText: helperText,\n              index: index,\n              form: form,\n              handleChange: _this2.handleChange,\n              fileUpload: _this2.fileUpload,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 57\n              }\n            });\n          });\n        }\n\n        return '';\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.stepButtonWrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        disabled: activeStep === 0,\n        onClick: this.handleBack,\n        className: classes.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 41\n        }\n      }, \"Back\"), this.isStepOptional(activeStep) && /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleSkip,\n        className: classes.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 45\n        }\n      }, \"Skip\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleNext,\n        className: classes.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 41\n        }\n      }, activeStep === steps.length - 1 ? 'Finish' : 'Next'))))));\n    }\n  }]);\n\n  return MuiForm;\n}(React.Component);\n\nfunction mapState(state) {\n  var formError = state.formError,\n      formSubmit = state.formSubmit;\n  return {\n    formError: formError,\n    formSubmit: formSubmit\n  };\n}\n\nvar actionCreators = {\n  clearData: crudActions._clear\n};\nexport default connect(mapState, actionCreators)(withStyles(styles)(MuiForm));","map":{"version":3,"sources":["/Users/jarvis/dev/beecash-events/app/javascript/packs/component/form/stepper.jsx"],"names":["React","Button","Typography","withStyles","SimpleReactValidator","connect","crudActions","Stepper","Step","StepLabel","RenderFormField","styles","theme","button","marginRight","spacing","stepWrapper","marginTop","marginBottom","stepButtonWrapper","form","width","submit","margin","MuiForm","clearFieldError","props","clearData","getFieldError","field","formError","error","forEach","element","message","setActiveStep","value","setState","activeStep","setSkipped","skipped","isStepOptional","step","steps","optional","findIndex","isStepSkipped","state","handleNext","validator","hideMessages","isValid","index","formFields","formField","validation","fieldValid","name","showMessages","forceUpdate","handleBack","handleSkip","Error","handleReset","confirmPanel","classes","submitText","submitFullWidth","handleChange","fileUpload","file","handleSubmit","event","preventDefault","formSubmit","allValid","autoForceUpdate","fullWidth","map","stepProps","labelProps","completed","label","length","helperText","Component","mapState","actionCreators","_clear"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport SimpleReactValidator from 'simple-react-validator';\nimport { connect } from 'react-redux';\nimport { crudActions } from '../../_actions';\n\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\n\nimport RenderFormField from './renderFormField'\n\nconst styles = (theme) => ({\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    stepWrapper: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    stepButtonWrapper: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(1),\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\nclass MuiForm extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            activeStep: 0,\n            skipped: null\n        }\n\n        this.validator = new SimpleReactValidator({\n            autoForceUpdate: this,\n            element: message => message\n        });\n    }\n\n    clearFieldError = () => {\n        this.props.clearData('formError')\n    }\n\n    getFieldError = (field) => {\n        const { formError } = this.props\n        let error\n        if (formError) {\n            formError.forEach(element => {\n                if (element.field === field) {\n                    error = element.message\n                }\n            });\n        }\n        return error\n    }\n\n    setActiveStep = (value) => {\n        this.setState({\n            activeStep: value\n        })\n    }\n\n    setSkipped = (value) => {\n        this.setState({\n            skipped: value\n        })\n    }\n\n    isStepOptional = (step) => {\n        const { steps } = this.props\n        const optional = steps.findIndex(step => step.optional === true)\n        return step === optional;\n    };\n\n    isStepSkipped = (step) => {\n        const { skipped } = this.state\n        return step === skipped;\n    };\n\n    handleNext = () => {\n        const { activeStep } = this.state\n        const { steps } = this.props\n\n        this.validator.hideMessages();\n\n        let isValid = true\n        if (steps) {\n            steps.forEach((element, index) => {\n                if (activeStep === index) {\n                    if (element.formFields) {\n                        element.formFields.forEach(formField => {\n                            if (formField.validation && !this.validator.fieldValid(formField.name)) {\n                                isValid = false\n                            }\n                        });\n                    }\n                }\n            });\n        }\n\n        if (isValid) {\n            this.isStepSkipped(activeStep)\n            this.setActiveStep(activeStep + 1);\n            this.setSkipped(activeStep + 1);\n        } else {\n            this.validator.showMessages();\n            this.forceUpdate();\n        }\n    };\n\n    handleBack = () => {\n        const { activeStep } = this.state\n        this.setActiveStep(activeStep - 1);\n    };\n\n    handleSkip = () => {\n        const { activeStep } = this.state\n        if (!this.isStepOptional(activeStep)) {\n            // You probably want to guard against something like this,\n            // it should never occur unless someone's actively trying to break something.\n            throw new Error(\"You can't skip a step that isn't optional.\");\n        }\n\n        this.setActiveStep(activeStep + 1);\n        this.setSkipped(activeStep);\n    };\n\n    handleReset = () => {\n        this.setActiveStep(0);\n    };\n\n    confirmPanel = () => {\n        const { classes, submitText, submitFullWidth } = this.props\n        return (\n            <React.Fragment>\n                <Typography className={classes.stepWrapper}>\n                    All steps completed - you&apos;re finished\n                </Typography>\n                <Button onClick={this.handleReset} className={classes.button}>\n                    Reset\n                </Button>\n                <Button\n                    type=\"submit\"\n                    fullWidth={submitFullWidth}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                >\n                    {submitText}\n                </Button>\n            </React.Fragment>\n        )\n    }\n\n    handleChange = (value, index) => {\n        this.props.handleChange(value, index)\n        this.clearFieldError()\n    }\n\n    fileUpload = (file) => {\n        this.props.fileUpload(file)\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (!this.props.formSubmit) {\n            this.handleReset()\n        }\n        if (this.validator.allValid()) {\n            this.props.handleSubmit(event)\n        } else {\n            this.validator.showMessages();\n            this.forceUpdate();\n        }\n    }\n\n    render() {\n        const { activeStep } = this.state\n        const { steps, classes, fullWidth } = this.props\n\n        return (\n            <React.Fragment>\n                <form className={classes.form} noValidate onSubmit={this.handleSubmit}>\n\n                    <Stepper activeStep={activeStep}>\n                        {steps.map((step, index) => {\n                            const stepProps = {};\n                            const labelProps = {};\n\n                            if (step.optional) {\n                                labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n                            }\n\n                            if (this.isStepSkipped(index)) {\n                                stepProps.completed = false;\n                            }\n\n                            return (\n                                <Step key={step.label} {...stepProps}>\n                                    <StepLabel {...labelProps}>{step.label}</StepLabel>\n                                </Step>\n                            );\n                        })}\n                    </Stepper>\n\n\n                    <div>\n                        {activeStep === steps.length ? (\n                            this.confirmPanel()\n                        ) : (\n                                <div>\n                                    {/* start process form */}\n                                    {steps.map((step, index) => {\n                                        if (index === activeStep) {\n                                            return (\n                                                step.formFields.map((form, index) => {\n                                                    let helperText\n                                                    if (form.validation) {\n                                                        helperText = this.validator.message(form.name, form.value, form.validation)\n                                                    }\n\n                                                    if (this.getFieldError(form.name)) {\n                                                        helperText = this.getFieldError(form.name)\n                                                    }\n                                                    return (\n                                                        <RenderFormField\n                                                            fullWidth={fullWidth}\n                                                            helperText={helperText}\n                                                            index={index}\n                                                            form={form}\n                                                            handleChange={this.handleChange}\n                                                            fileUpload={this.fileUpload}\n                                                        />\n                                                    )\n                                                })\n\n                                            )\n                                        }\n                                        return ''\n                                    })}\n                                    {/* end process form */}\n\n                                    {/* process buttons */}\n                                    <div className={classes.stepButtonWrapper}>\n                                        <Button disabled={activeStep === 0} onClick={this.handleBack} className={classes.button}>\n                                            Back\n                                        </Button>\n\n                                        {this.isStepOptional(activeStep) && (\n                                            <Button\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                onClick={this.handleSkip}\n                                                className={classes.button}\n                                            >\n                                                Skip\n                                            </Button>\n                                        )}\n\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={this.handleNext}\n                                            className={classes.button}\n                                        >\n                                            {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                        </Button>\n                                    </div>\n                                    {/* end process buttons */}\n                                </div>\n                            )}\n                    </div>\n\n                </form>\n            </React.Fragment>\n        )\n\n    }\n}\n\nfunction mapState(state) {\n    const { formError, formSubmit } = state;\n    return {\n        formError,\n        formSubmit\n    };\n}\n\nconst actionCreators = {\n    clearData: crudActions._clear,\n};\n\nexport default connect(mapState, actionCreators)(withStyles(styles)(MuiForm));"]},"metadata":{},"sourceType":"module"}